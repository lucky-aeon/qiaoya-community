############################################
# Postgres connection
############################################
PG_HOST=127.0.0.1
PG_PORT=5432
PG_DATABASE=community
PG_USER=postgres
# PGPASSWORD is read from env at runtime. You can export it in cron or use .pgpass
# export PGPASSWORD=your_password

############################################
# Backup behavior
############################################
# local | oss | both
BACKUP_MODE=both
BACKUP_BASE_DIR=/data/db-backups
BACKUP_LOG_DIR=/var/log/db-backup
RETENTION_DAYS=7

# Additional pg_dump options (optional)
# PG_DUMP_EXTRA_OPTS="--exclude-table-data=large_audit_table"

# Dump global roles/privileges (pg_dumpall --globals-only)
INCLUDE_GLOBALS=true

############################################
# Upload tool selection
############################################
# ossutil | rclone
BACKUP_UPLOAD_TOOL=ossutil

# If ossutil
OSS_BUCKET=your-oss-bucket
OSS_PREFIX=postgres/backups
OSS_ENDPOINT=oss-cn-hangzhou.aliyuncs.com
OSS_ACCESS_KEY_ID=YourRAMAccessKeyId
OSS_ACCESS_KEY_SECRET=YourRAMAccessKeySecret

# If rclone (ensure rclone remote named "oss" is configured)
RCLONE_REMOTE=oss
RCLONE_PATH=postgres/backups

# You can point the script to this file:
#   BACKUP_ENV_FILE=/path/to/.env.backup ./db_backup.sh

