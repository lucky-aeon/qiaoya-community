server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Docker 容器日志采集（生产环境）
  - job_name: docker-logs
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 30s
    pipeline_stages:
      - docker: {}
      - json:
          expressions:
            level: level
            logger: logger
            thread: thread
            service: service
            env: env
            traceId: traceId
      - labels:
          level:
          service:
          env:
    relabel_configs:
      - source_labels: ['__meta_docker_container_id']
        target_label: '__path__'
        replacement: '/var/lib/docker/containers/$1/$1-json.log'
      - source_labels: ['__meta_docker_container_name']
        target_label: 'container'
      - source_labels: ['__meta_docker_container_label_com_docker_compose_service']
        target_label: 'compose_service'
      - source_labels: ['__meta_docker_container_label_com_docker_compose_project']
        target_label: 'compose_project'
      - target_label: 'job'
        replacement: 'docker'

  # 本地文件日志采集（本地开发环境）
  - job_name: local-app-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: local-app
          host: local-dev
          __path__: /var/log/app/*.log
    pipeline_stages:
      # 解析 JSON 日志
      - json:
          expressions:
            level: level
            logger: logger_name
            thread: thread_name
            service: service
            env: env
            message: message
            timestamp: '"@timestamp"'
            requestId: requestId
            userId: userId
            ip: ip
            uri: uri
      # 解析时间戳
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      # 提取标签
      - labels:
          level:
          service:
          env:
          requestId:
      # 输出日志内容
      - output:
          source: message


